// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PositionStatus {
  ACTIVE
  INACTIVE
  EXPIRED
  COMPLETED
}

enum PositionFinality {
  FINAL
  PENDING
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}


enum ReservationStatus {
  ACTIVE
  INACTIVE
  COMPLETED
  EXPIRED
}

model Position {
  id            String           @id @default(uuid())
  positionId    String           @unique
  ownerAddress  String
  state         PositionStatus    @default(ACTIVE)
  finality      PositionFinality @default(FINAL)
  amount        BigInt
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  reservations  Reservation[]
  contractRegistrationTxHash  String?
  contractRegistrationConfirmations Int?
  originTxHash  String?
  destinationTxHash  String?
  receivedAmount  BigInt?
  receivedAt  DateTime?
  bitcoinAddress  String?
}

model Reservation {
  id             String            @id @default(uuid())
  reservationId  String            @unique
  ownerAddress   String
  state          ReservationStatus @default(ACTIVE)
  finality       PositionFinality  @default(FINAL)
  amount         BigInt
  positionId     String?
  position       Position?         @relation(fields: [positionId], references: [positionId])
  transactions   Json              @default("[]")
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  contractRegistrationTxHash  String?
  contractRegistrationConfirmations Int?
  originTxHash  String?
  destinationTxHash  String?
  receivedAmount  BigInt?
  receivedAt  DateTime?
  bitcoinAddress  String?
}
